name: Build SBC Docker Image

on:
  push:
    branches: [main]          # just build
    tags:     ['v*']          # build + publish
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/steelhead-foxy
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: linux/amd64         # x86 path
            runner: ubuntu-latest
          - platform: linux/arm64         # native Arm path
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        if: startsWith(github.ref, 'refs/tags/')     # login only when publishing
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build (push on tag)
        uses: docker/build-push-action@v5
        id: docker
        with:
          context: .
          file: ./docker-sbc/Dockerfile
          platforms: ${{ matrix.arch }}
          push: ${{ startsWith(github.ref, 'refs/tags/') }}   # false on main, true on tag
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:${{ github.ref_name }}

      - name: Export digest
        run: echo "${{ steps.docker.outputs.digest }}" > digest-${{ matrix.arch }}.txt
        if: startsWith(github.ref,'refs/tags/')
      - uses: actions/upload-artifact@v4
        if: startsWith(github.ref,'refs/tags/')
        with:
          name: digest-${{ matrix.arch }}
          path: digest-${{ matrix.arch }}.txt

  manifest:
    if: startsWith(github.ref, 'refs/tags/')          # run only for tags
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: digest-*
          merge-multiple: true

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create multi-arch manifest
        run: |
          docker buildx imagetools create \
            --tag $IMAGE_NAME:latest \
            --tag $IMAGE_NAME:${{ github.ref_name }} \
            $(cat digest-linux_amd64.txt) \
            $(cat digest-linux_arm64.txt)
